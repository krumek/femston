local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Settings
local Settings = {
    AimBot = { Enabled = false, FOV = 100, TeamCheck = false, Key = Enum.KeyCode.R },
    Visuals = {
        ESPEnabled = false,
        ShowBox = true,
        ShowHealth = true,
        ShowName = true,
        ShowDistance = true,
        ShowTracer = true,
        TracerStart = "Bottom",
        ESPInterval = 2,
        NameTags = false,
        TrailsEnabled = false,
        BulletTracersEnabled = false,
        GlowEnabled = false
    },
    Rage = {
        SpinBotEnabled = false,
        SpinSpeed = 50,
        WallShotEnabled = false,
        BunnyHopEnabled = false
    },
    Funny = {
        Enabled = false,
        Key = Enum.KeyCode.F,
        SoundId = "rbxassetid://183843979" -- Funny звук
    },
    Binds = { ToggleMenu = {Enum.KeyCode.RightShift, Enum.KeyCode.Home} }
}

-- Instances
local Instances = { ESP = {}, NameTags = {}, TargetESP = nil, Trails = {}, BulletTracers = {}, Glows = {}, DeathSounds = {} }
local ESPToggleTime = {}
local isRightMouseDown = false
local spinAngle = 0

-- GUI Setup (Skid/NeverLose Style)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "KATXoneNursultan"
ScreenGui.Enabled = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Pink Sky Overlay
local SkyOverlay = Instance.new("Frame")
SkyOverlay.Parent = ScreenGui
SkyOverlay.Size = UDim2.new(1, 0, 1, 0)
SkyOverlay.BackgroundColor3 = Color3.fromRGB(255, 105, 180)
SkyOverlay.BackgroundTransparency = 0.7
local SkyGradient = Instance.new("UIGradient")
SkyGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 105, 180)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(139, 0, 139))
}
SkyGradient.Parent = SkyOverlay

-- Main Frame (Dark Theme)
local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 350, 0, 400)
Frame.Position = UDim2.new(0.5, -175, 0.5, -200)
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Frame.BackgroundTransparency = 0.1
local FrameCorner = Instance.new("UICorner")
FrameCorner.CornerRadius = UDim.new(0, 8)
FrameCorner.Parent = Frame
local FrameStroke = Instance.new("UIStroke")
FrameStroke.Color = Color3.fromRGB(255, 0, 255)
FrameStroke.Thickness = 1.5
FrameStroke.Transparency = 0.3
FrameStroke.Parent = Frame

-- Title
local Title = Instance.new("TextLabel")
Title.Parent = Frame
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Text = "KAT Skid/NeverLose"
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 0, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18
local TitleStroke = Instance.new("UIStroke")
TitleStroke.Color = Color3.fromRGB(0, 0, 0)
TitleStroke.Thickness = 1
TitleStroke.Parent = Title

-- Draggable Main Frame
local dragging, dragStart, startPos
Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
    end
end)
Frame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
Frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Tabs
local TabsFrame = Instance.new("Frame")
TabsFrame.Parent = Frame
TabsFrame.Size = UDim2.new(1, 0, 0, 30)
TabsFrame.Position = UDim2.new(0, 0, 0, 30)
TabsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TabsFrame.BackgroundTransparency = 0.1

local CombatTab = Instance.new("TextButton")
CombatTab.Parent = TabsFrame
CombatTab.Size = UDim2.new(0.33, 0, 1, 0)
CombatTab.Text = "Combat"
CombatTab.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
CombatTab.TextColor3 = Color3.fromRGB(255, 0, 255)
CombatTab.Font = Enum.Font.SourceSans
CombatTab.TextSize = 14
CombatTab.ZIndex = 10

local VisualsTab = Instance.new("TextButton")
VisualsTab.Parent = TabsFrame
VisualsTab.Size = UDim2.new(0.33, 0, 1, 0)
VisualsTab.Position = UDim2.new(0.33, 0, 0, 0)
VisualsTab.Text = "Visuals"
VisualsTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
VisualsTab.TextColor3 = Color3.fromRGB(255, 0, 255)
VisualsTab.Font = Enum.Font.SourceSans
VisualsTab.TextSize = 14
VisualsTab.ZIndex = 10

local RageTab = Instance.new("TextButton")
RageTab.Parent = TabsFrame
RageTab.Size = UDim2.new(0.34, 0, 1, 0)
RageTab.Position = UDim2.new(0.66, 0, 0, 0)
RageTab.Text = "Rage"
RageTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
RageTab.TextColor3 = Color3.fromRGB(255, 0, 255)
RageTab.Font = Enum.Font.SourceSans
RageTab.TextSize = 14
RageTab.ZIndex = 10

-- Panels
local CombatPanel = Instance.new("Frame")
CombatPanel.Parent = Frame
CombatPanel.Size = UDim2.new(1, 0, 1, -60)
CombatPanel.Position = UDim2.new(0, 0, 0, 60)
CombatPanel.BackgroundTransparency = 1
CombatPanel.ZIndex = 5

local VisualsPanel = Instance.new("Frame")
VisualsPanel.Parent = Frame
VisualsPanel.Size = UDim2.new(1, 0, 1, -60)
VisualsPanel.Position = UDim2.new(0, 0, 0, 60)
VisualsPanel.BackgroundTransparency = 1
VisualsPanel.Visible = false
VisualsPanel.ZIndex = 5

local RagePanel = Instance.new("Frame")
RagePanel.Parent = Frame
RagePanel.Size = UDim2.new(1, 0, 1, -60)
RagePanel.Position = UDim2.new(0, 0, 0, 60)
RagePanel.BackgroundTransparency = 1
RagePanel.Visible = false
RagePanel.ZIndex = 5

-- Combat Controls
local AimButton = Instance.new("TextButton")
AimButton.Parent = CombatPanel
AimButton.Size = UDim2.new(0, 110, 0, 30)
AimButton.Position = UDim2.new(0, 10, 0, 10)
AimButton.Text = "AimBot OFF"
AimButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
AimButton.TextColor3 = Color3.fromRGB(255, 0, 255)
AimButton.Font = Enum.Font.SourceSans
AimButton.TextSize = 14
AimButton.ZIndex = 10
local AimButtonStroke = Instance.new("UIStroke")
AimButtonStroke.Color = Color3.fromRGB(255, 0, 255)
AimButtonStroke.Thickness = 1
AimButtonStroke.Transparency = 0.5
AimButtonStroke.Parent = AimButton

local AimSubMenu = Instance.new("Frame")
AimSubMenu.Parent = CombatPanel
AimSubMenu.Size = UDim2.new(0, 130, 0, 80)
AimSubMenu.Position = UDim2.new(0, 130, 0, 10)
AimSubMenu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
AimSubMenu.BackgroundTransparency = 0.2
AimSubMenu.Visible = false
AimSubMenu.ZIndex = 10
local AimSubMenuStroke = Instance.new("UIStroke")
AimSubMenuStroke.Color = Color3.fromRGB(255, 0, 255)
AimSubMenuStroke.Thickness = 1
AimSubMenuStroke.Transparency = 0.5
AimSubMenuStroke.Parent = AimSubMenu

local FOVSlider = Instance.new("TextBox")
FOVSlider.Parent = AimSubMenu
FOVSlider.Size = UDim2.new(0, 110, 0, 30)
FOVSlider.Position = UDim2.new(0, 10, 0, 10)
FOVSlider.Text = "FOV: 100"
FOVSlider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FOVSlider.TextColor3 = Color3.fromRGB(255, 0, 255)
FOVSlider.Font = Enum.Font.SourceSans
FOVSlider.TextSize = 14
FOVSlider.ZIndex = 15
local FOVSliderStroke = Instance.new("UIStroke")
FOVSliderStroke.Color = Color3.fromRGB(255, 0, 255)
FOVSliderStroke.Thickness = 1
FOVSliderStroke.Transparency = 0.5
FOVSliderStroke.Parent = FOVSlider

local AimBindButton = Instance.new("TextButton")
AimBindButton.Parent = AimSubMenu
AimBindButton.Size = UDim2.new(0, 110, 0, 30)
AimBindButton.Position = UDim2.new(0, 10, 0, 40)
AimBindButton.Text = "Bind: R"
AimBindButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
AimBindButton.TextColor3 = Color3.fromRGB(255, 0, 255)
AimBindButton.Font = Enum.Font.SourceSans
AimBindButton.TextSize = 14
AimBindButton.ZIndex = 15
local AimBindButtonStroke = Instance.new("UIStroke")
AimBindButtonStroke.Color = Color3.fromRGB(255, 0, 255)
AimBindButtonStroke.Thickness = 1
AimBindButtonStroke.Transparency = 0.5
AimBindButtonStroke.Parent = AimBindButton

-- Visuals Controls
local ESPButton = Instance.new("TextButton")
ESPButton.Parent = VisualsPanel
ESPButton.Size = UDim2.new(0, 110, 0, 30)
ESPButton.Position = UDim2.new(0, 10, 0, 10)
ESPButton.Text = "ESP OFF"
ESPButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ESPButton.TextColor3 = Color3.fromRGB(255, 0, 255)
ESPButton.Font = Enum.Font.SourceSans
ESPButton.TextSize = 14
ESPButton.ZIndex = 10
local ESPButtonStroke = Instance.new("UIStroke")
ESPButtonStroke.Color = Color3.fromRGB(255, 0, 255)
ESPButtonStroke.Thickness = 1
ESPButtonStroke.Transparency = 0.5
ESPButtonStroke.Parent = ESPButton

local NameTagsButton = Instance.new("TextButton")
NameTagsButton.Parent = VisualsPanel
NameTagsButton.Size = UDim2.new(0, 110, 0, 30)
NameTagsButton.Position = UDim2.new(0, 10, 0, 50)
NameTagsButton.Text = "NameTags OFF"
NameTagsButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
NameTagsButton.TextColor3 = Color3.fromRGB(255, 0, 255)
NameTagsButton.Font = Enum.Font.SourceSans
NameTagsButton.TextSize = 14
NameTagsButton.ZIndex = 10
local NameTagsButtonStroke = Instance.new("UIStroke")
NameTagsButtonStroke.Color = Color3.fromRGB(255, 0, 255)
NameTagsButtonStroke.Thickness = 1
NameTagsButtonStroke.Transparency = 0.5
NameTagsButtonStroke.Parent = NameTagsButton

local TrailsButton = Instance.new("TextButton")
TrailsButton.Parent = VisualsPanel
TrailsButton.Size = UDim2.new(0, 110, 0, 30)
TrailsButton.Position = UDim2.new(0, 10, 0, 90)
TrailsButton.Text = "Trails OFF"
TrailsButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TrailsButton.TextColor3 = Color3.fromRGB(255, 0, 255)
TrailsButton.Font = Enum.Font.SourceSans
TrailsButton.TextSize = 14
TrailsButton.ZIndex = 10
local TrailsButtonStroke = Instance.new("UIStroke")
TrailsButtonStroke.Color = Color3.fromRGB(255, 0, 255)
TrailsButtonStroke.Thickness = 1
TrailsButtonStroke.Transparency = 0.5
TrailsButtonStroke.Parent = TrailsButton

local BulletTracersButton = Instance.new("TextButton")
BulletTracersButton.Parent = VisualsPanel
BulletTracersButton.Size = UDim2.new(0, 110, 0, 30)
BulletTracersButton.Position = UDim2.new(0, 10, 0, 130)
BulletTracersButton.Text = "Bullet Tracers OFF"
BulletTracersButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
BulletTracersButton.TextColor3 = Color3.fromRGB(255, 0, 255)
BulletTracersButton.Font = Enum.Font.SourceSans
BulletTracersButton.TextSize = 14
BulletTracersButton.ZIndex = 10
local BulletTracersButtonStroke = Instance.new("UIStroke")
BulletTracersButtonStroke.Color = Color3.fromRGB(255, 0, 255)
BulletTracersButtonStroke.Thickness = 1
BulletTracersButtonStroke.Transparency = 0.5
BulletTracersButtonStroke.Parent = BulletTracersButton

local GlowButton = Instance.new("TextButton")
GlowButton.Parent = VisualsPanel
GlowButton.Size = UDim2.new(0, 110, 0, 30)
GlowButton.Position = UDim2.new(0, 10, 0, 170)
GlowButton.Text = "Glow OFF"
GlowButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
GlowButton.TextColor3 = Color3.fromRGB(255, 0, 255)
GlowButton.Font = Enum.Font.SourceSans
GlowButton.TextSize = 14
GlowButton.ZIndex = 10
local GlowButtonStroke = Instance.new("UIStroke")
GlowButtonStroke.Color = Color3.fromRGB(255, 0, 255)
GlowButtonStroke.Thickness = 1
GlowButtonStroke.Transparency = 0.5
GlowButtonStroke.Parent = GlowButton

-- Rage Controls
local SpinBotButton = Instance.new("TextButton")
SpinBotButton.Parent = RagePanel
SpinBotButton.Size = UDim2.new(0, 110, 0, 30)
SpinBotButton.Position = UDim2.new(0, 10, 0, 10)
SpinBotButton.Text = "SpinBot OFF"
SpinBotButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
SpinBotButton.TextColor3 = Color3.fromRGB(255, 0, 255)
SpinBotButton.Font = Enum.Font.SourceSans
SpinBotButton.TextSize = 14
SpinBotButton.ZIndex = 10
local SpinBotButtonStroke = Instance.new("UIStroke")
SpinBotButtonStroke.Color = Color3.fromRGB(255, 0, 255)
SpinBotButtonStroke.Thickness = 1
SpinBotButtonStroke.Transparency = 0.5
SpinBotButtonStroke.Parent = SpinBotButton

local SpinSpeedSlider = Instance.new("TextBox")
SpinSpeedSlider.Parent = RagePanel
SpinSpeedSlider.Size = UDim2.new(0, 110, 0, 30)
SpinSpeedSlider.Position = UDim2.new(0, 130, 0, 10)
SpinSpeedSlider.Text = "Speed: 50"
SpinSpeedSlider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
SpinSpeedSlider.TextColor3 = Color3.fromRGB(255, 0, 255)
SpinSpeedSlider.Font = Enum.Font.SourceSans
SpinSpeedSlider.TextSize = 14
SpinSpeedSlider.ZIndex = 10
SpinSpeedSlider.Visible = false
local SpinSpeedSliderStroke = Instance.new("UIStroke")
SpinSpeedSliderStroke.Color = Color3.fromRGB(255, 0, 255)
SpinSpeedSliderStroke.Thickness = 1
SpinSpeedSliderStroke.Transparency = 0.5
SpinSpeedSliderStroke.Parent = SpinSpeedSlider

local WallShotButton = Instance.new("TextButton")
WallShotButton.Parent = RagePanel
WallShotButton.Size = UDim2.new(0, 110, 0, 30)
WallShotButton.Position = UDim2.new(0, 10, 0, 50)
WallShotButton.Text = "WallShot OFF"
WallShotButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
WallShotButton.TextColor3 = Color3.fromRGB(255, 0, 255)
WallShotButton.Font = Enum.Font.SourceSans
WallShotButton.TextSize = 14
WallShotButton.ZIndex = 10
local WallShotButtonStroke = Instance.new("UIStroke")
WallShotButtonStroke.Color = Color3.fromRGB(255, 0, 255)
WallShotButtonStroke.Thickness = 1
WallShotButtonStroke.Transparency = 0.5
WallShotButtonStroke.Parent = WallShotButton

local BunnyHopButton = Instance.new("TextButton")
BunnyHopButton.Parent = RagePanel
BunnyHopButton.Size = UDim2.new(0, 110, 0, 30)
BunnyHopButton.Position = UDim2.new(0, 10, 0, 90)
BunnyHopButton.Text = "BunnyHop OFF"
BunnyHopButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
BunnyHopButton.TextColor3 = Color3.fromRGB(255, 0, 255)
BunnyHopButton.Font = Enum.Font.SourceSans
BunnyHopButton.TextSize = 14
BunnyHopButton.ZIndex = 10
local BunnyHopButtonStroke = Instance.new("UIStroke")
BunnyHopButtonStroke.Color = Color3.fromRGB(255, 0, 255)
BunnyHopButtonStroke.Thickness = 1
BunnyHopButtonStroke.Transparency = 0.5
BunnyHopButtonStroke.Parent = BunnyHopButton

-- Funny Control (Added to Rage Panel)
local FunnyButton = Instance.new("TextButton")
FunnyButton.Parent = RagePanel
FunnyButton.Size = UDim2.new(0, 110, 0, 30)
FunnyButton.Position = UDim2.new(0, 10, 0, 130)
FunnyButton.Text = "Funny OFF"
FunnyButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FunnyButton.TextColor3 = Color3.fromRGB(255, 0, 255)
FunnyButton.Font = Enum.Font.SourceSans
FunnyButton.TextSize = 14
FunnyButton.ZIndex = 10
local FunnyButtonStroke = Instance.new("UIStroke")
FunnyButtonStroke.Color = Color3.fromRGB(255, 0, 255)
FunnyButtonStroke.Thickness = 1
FunnyButtonStroke.Transparency = 0.5
FunnyButtonStroke.Parent = FunnyButton

local FunnySubMenu = Instance.new("Frame")
FunnySubMenu.Parent = RagePanel
FunnySubMenu.Size = UDim2.new(0, 130, 0, 30)
FunnySubMenu.Position = UDim2.new(0, 130, 0, 130)
FunnySubMenu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
FunnySubMenu.BackgroundTransparency = 0.2
FunnySubMenu.Visible = false
FunnySubMenu.ZIndex = 10
local FunnySubMenuStroke = Instance.new("UIStroke")
FunnySubMenuStroke.Color = Color3.fromRGB(255, 0, 255)
FunnySubMenuStroke.Thickness = 1
FunnySubMenuStroke.Transparency = 0.5
FunnySubMenuStroke.Parent = FunnySubMenu

local FunnyBindButton = Instance.new("TextButton")
FunnyBindButton.Parent = FunnySubMenu
FunnyBindButton.Size = UDim2.new(0, 110, 0, 30)
FunnyBindButton.Position = UDim2.new(0, 10, 0, 0)
FunnyBindButton.Text = "Bind: F"
FunnyBindButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FunnyBindButton.TextColor3 = Color3.fromRGB(255, 0, 255)
FunnyBindButton.Font = Enum.Font.SourceSans
FunnyBindButton.TextSize = 14
FunnyBindButton.ZIndex = 15
local FunnyBindButtonStroke = Instance.new("UIStroke")
FunnyBindButtonStroke.Color = Color3.fromRGB(255, 0, 255)
FunnyBindButtonStroke.Thickness = 1
FunnyBindButtonStroke.Transparency = 0.5
FunnyBindButtonStroke.Parent = FunnyBindButton

-- Bind List Window
local BindsFrame = Instance.new("Frame")
BindsFrame.Parent = ScreenGui
BindsFrame.Size = UDim2.new(0, 220, 0, 200)
BindsFrame.Position = UDim2.new(0.5, 200, 0.5, -100)
BindsFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
BindsFrame.BackgroundTransparency = 0.1
BindsFrame.Visible = false
local BindsCorner = Instance.new("UICorner")
BindsCorner.CornerRadius = UDim.new(0, 8)
BindsCorner.Parent = BindsFrame
local BindsStroke = Instance.new("UIStroke")
BindsStroke.Color = Color3.fromRGB(255, 0, 255)
BindsStroke.Thickness = 1.5
BindsStroke.Transparency = 0.3
BindsStroke.Parent = BindsFrame

local BindList = Instance.new("TextLabel")
BindList.Parent = BindsFrame
BindList.Size = UDim2.new(1, -10, 1, -10)
BindList.Position = UDim2.new(0, 5, 0, 5)
BindList.BackgroundTransparency = 1
BindList.TextColor3 = Color3.fromRGB(255, 0, 255)
BindList.Font = Enum.Font.SourceSans
BindList.TextSize = 14
BindList.TextXAlignment = Enum.TextXAlignment.Left
BindList.Text = "Binds:\nToggle Menu: RShift/Home\nAimBot: R\nESP: None\nNameTags: None\nTrails: None\nBullet Tracers: None\nGlow: None\nSpinBot: None\nWallShot: None\nBunnyHop: None\nFunny: None"
BindList.ZIndex = 10

-- Draggable Binds Frame
local bindsDragging, bindsDragStart, bindsStartPos
BindsFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        bindsDragging = true
        bindsDragStart = input.Position
        bindsStartPos = BindsFrame.Position
    end
end)
BindsFrame.InputChanged:Connect(function(input)
    if bindsDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - bindsDragStart
        BindsFrame.Position = UDim2.new(bindsStartPos.X.Scale, bindsStartPos.X.Offset + delta.X, bindsStartPos.Y.Scale, bindsStartPos.Y.Offset + delta.Y)
    end
end)
BindsFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        bindsDragging = false
    end
end)

-- Watermark
local Watermark = Instance.new("TextLabel")
Watermark.Parent = ScreenGui
Watermark.Size = UDim2.new(0, 200, 0, 20)
Watermark.Position = UDim2.new(1, -210, 1, -30)
Watermark.BackgroundTransparency = 1
Watermark.TextColor3 = Color3.fromRGB(255, 0, 255)
Watermark.Text = "KAT Skid/NeverLose - 05/06/2025"
Watermark.Font = Enum.Font.SourceSans
Watermark.TextSize = 14
Watermark.ZIndex = 10

-- ESP (Universal Script)
local function createESP(player)
    local box = Drawing.new("Square")
    box.Visible = false
    box.Color = Color3.fromRGB(255, 0, 0)
    box.Thickness = 1
    box.Filled = false
    box.Transparency = 1

    local healthText = Drawing.new("Text")
    healthText.Visible = false
    healthText.Color = Color3.fromRGB(0, 255, 0)
    healthText.Size = 16
    healthText.Outline = true

    local nameText = Drawing.new("Text")
    nameText.Visible = false
    nameText.Color = Color3.fromRGB(255, 255, 255)
    nameText.Size = 16
    nameText.Outline = true

    local distanceText = Drawing.new("Text")
    distanceText.Visible = false
    distanceText.Color = Color3.fromRGB(0, 0, 255)
    distanceText.Size = 16
    distanceText.Outline = true

    local tracer = Drawing.new("Line")
    tracer.Visible = false
    tracer.Color = Color3.fromRGB(255, 255, 0)
    tracer.Thickness = 1

    Instances.ESP[player] = { box = box, healthText = healthText, nameText = nameText, distanceText = distanceText, tracer = tracer }
    ESPToggleTime[player] = tick()

    player.CharacterAdded:Connect(function()
        if Settings.Visuals.ESPEnabled and Instances.ESP[player] then
            for _, drawing in pairs(Instances.ESP[player]) do
                drawing.Visible = false
            end
        end
    end)

    player.CharacterRemoving:Connect(function()
        if Instances.ESP[player] then
            for _, drawing in pairs(Instances.ESP[player]) do
                drawing:Remove()
            end
        end
    end)
end

local function updateESP()
    for player, esp in pairs(Instances.ESP) do
        local success, result = pcall(function()
            if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character:FindFirstChild("HumanoidRootPart") and player ~= LocalPlayer then
                if Settings.Visuals.TeamCheck and player.Team == LocalPlayer.Team then
                    for _, drawing in pairs(esp) do
                        drawing.Visible = false
                    end
                    return
                end

                local humanoid = player.Character.Humanoid
                local rootPart = player.Character.HumanoidRootPart
                local screenPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)

                local currentTime = tick()
                if currentTime - ESPToggleTime[player] > Settings.Visuals.ESPInterval then
                    ESPToggleTime[player] = currentTime
                end
                local isVisible = math.floor((currentTime - ESPToggleTime[player]) / (Settings.Visuals.ESPInterval / 2)) % 2 == 0

                if onScreen and isVisible then
                    local headPos = Camera:WorldToViewportPoint(player.Character.Head.Position)
                    local torsoPos = Camera:WorldToViewportPoint(rootPart.Position)
                    local bottomPos = Camera:WorldToViewportPoint(rootPart.Position - Vector3.new(0, 3, 0))

                    local height = math.abs(headPos.Y - bottomPos.Y)
                    local width = height / 2

                    if Settings.Visuals.ShowBox then
                        esp.box.Size = Vector2.new(width, height)
                        esp.box.Position = Vector2.new(torsoPos.X - width / 2, torsoPos.Y - height / 2)
                        esp.box.Visible = true
                    else
                        esp.box.Visible = false
                    end

                    if Settings.Visuals.ShowHealth then
                        esp.healthText.Text = tostring(math.floor(humanoid.Health))
                        esp.healthText.Position = Vector2.new(torsoPos.X - width / 2 - 30, torsoPos.Y - height / 2)
                        esp.healthText.Visible = true
                    else
                        esp.healthText.Visible = false
                    end

                    if Settings.Visuals.ShowName then
                        esp.nameText.Text = player.Name
                        esp.nameText.Position = Vector2.new(torsoPos.X, torsoPos.Y - height / 2 - 20)
                        esp.nameText.Visible = true
                    else
                        esp.nameText.Visible = false
                    end

                    if Settings.Visuals.ShowDistance then
                        local distance = (LocalPlayer.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude
                        esp.distanceText.Text = tostring(math.floor(distance))
                        esp.distanceText.Position = Vector2.new(torsoPos.X, torsoPos.Y + height / 2 + 10)
                        esp.distanceText.Visible = true
                    else
                        esp.distanceText.Visible = false
                    end

                    if Settings.Visuals.ShowTracer then
                        local startY = Settings.Visuals.TracerStart == "Bottom" and Camera.ViewportSize.Y or Camera.ViewportSize.Y / 2
                        esp.tracer.From = Vector2.new(Camera.ViewportSize.X / 2, startY)
                        esp.tracer.To = Vector2.new(torsoPos.X, torsoPos.Y)
                        esp.tracer.Visible = true
                    else
                        esp.tracer.Visible = false
                    end
                else
                    for _, drawing in pairs(esp) do
                        drawing.Visible = false
                    end
                end
            else
                for _, drawing in pairs(esp) do
                    drawing.Visible = false
                end
            end
        end)

        if not success then
            for _, drawing in pairs(esp) do
                drawing:Remove()
            end
        end
    end
end

local function ToggleESP()
    Settings.Visuals.ESPEnabled = not Settings.Visuals.ESPEnabled
    if Settings.Visuals.ESPEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if not Instances.ESP[player] then
                createESP(player)
            end
        end
        Players.PlayerAdded:Connect(createESP)
        RunService.RenderStepped:Connect(updateESP)
    else
        for _, esp in pairs(Instances.ESP) do
            for _, drawing in pairs(esp) do
                drawing:Remove()
            end
        end
        Instances.ESP = {}
    end
    ESPButton.Text = Settings.Visuals.ESPEnabled and "ESP ON" or "ESP OFF"
    UpdateBindList()
end

-- AimBot (With Right Mouse Hold)
local closestPlayer = nil
local mouse = LocalPlayer:GetMouse()

local function getClosestPlayerToMouse(wallShot)
    local closest = nil
    local closestDist = Settings.AimBot.FOV

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character:FindFirstChild("Head") and player.Character.Humanoid.Health > 0 then
            if Settings.AimBot.TeamCheck and player.Team == LocalPlayer.Team then
                continue
            end

            local headPos, onScreen = Camera:WorldToViewportPoint(player.Character.Head.Position)
            if onScreen or wallShot then
                local dist = (Vector2.new(headPos.X, headPos.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude
                if dist < closestDist then
                    closestDist = dist
                    closest = player
                end
            end
        end
    end
    return closest
end

-- Target ESP (Expensive 2.0 Style)
RunService.RenderStepped:Connect(function()
    if Settings.AimBot.Enabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and isRightMouseDown then
        closestPlayer = getClosestPlayerToMouse(false)
        if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("Head") then
            local headPos = closestPlayer.Character.Head.Position
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, headPos)
        end
        if Instances.TargetESP then
            Instances.TargetESP:Destroy()
            Instances.TargetESP = nil
        end
        if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("HumanoidRootPart") and closestPlayer.Character:FindFirstChild("Humanoid") then
            local Box = Instance.new("BoxHandleAdornment")
            Box.Parent = game.CoreGui
            Box.Adornee = closestPlayer.Character.HumanoidRootPart
            Box.Size = Vector3.new(2, 4, 2)
            Box.Transparency = math.sin(tick() * 2) * 0.2 + 0.4
            Box.AlwaysOnTop = true
            Box.ZIndex = 5
            local health = closestPlayer.Character.Humanoid.Health / closestPlayer.Character.Humanoid.MaxHealth
            local Gradient = Instance.new("UIGradient")
            Gradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 105, 180))
            }
            Gradient.Parent = Box
            Box.Color3 = Color3.fromRGB(255 * (1 - health), 105, 180)
            Instances.TargetESP = Box
        end
    else
        if Instances.TargetESP then
            Instances.TargetESP:Destroy()
            Instances.TargetESP = nil
        end
    end
end)

-- NameTags (Delta Beta Style)
local function createNameTag(player)
    if player == LocalPlayer or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") or not player.Character:FindFirstChild("Humanoid") or player.Character.Humanoid.Health <= 0 then return end
    local BillboardGui = Instance.new("BillboardGui")
    BillboardGui.Parent = game.CoreGui
    BillboardGui.Adornee = player.Character.HumanoidRootPart
    BillboardGui.Size = UDim2.new(0, 100, 0, 120)
    BillboardGui.StudsOffset = Vector3.new(0, 3, 0)
    BillboardGui.AlwaysOnTop = true

    local Frame = Instance.new("Frame")
    Frame.Parent = BillboardGui
    Frame.Size = UDim2.new(1, 0, 1, 0)
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 50)
    Frame.BackgroundTransparency = 0.5
    local FrameStroke = Instance.new("UIStroke")
    FrameStroke.Color = Color3.fromRGB(0, 191, 255)
    FrameStroke.Thickness = 2
    FrameStroke.Transparency = 0.3
    FrameStroke.Parent = Frame

    local ImageLabel = Instance.new("ImageLabel")
    ImageLabel.Parent = Frame
    ImageLabel.Size = UDim2.new(0.8, 0, 0.7, 0)
    ImageLabel.Position = UDim2.new(0.1, 0, 0.1, 0)
    ImageLabel.BackgroundTransparency = 1
    ImageLabel.Image = "rbxassetid://0"
    local ImageCorner = Instance.new("UICorner")
    ImageCorner.CornerRadius = UDim.new(0, 5)
    ImageCorner.Parent = ImageLabel

    local NameLabel = Instance.new("TextLabel")
    NameLabel.Parent = Frame
    NameLabel.Size = UDim2.new(1, 0, 0.15, 0)
    NameLabel.Position = UDim2.new(0, 0, 0.75, 0)
    NameLabel.BackgroundTransparency = 1
    NameLabel.TextColor3 = Color3.fromRGB(255, 105, 180)
    NameLabel.Font = Enum.Font.Code
    NameLabel.TextSize = 14
    NameLabel.Text = player.Name

    local DistanceLabel = Instance.new("TextLabel")
    DistanceLabel.Parent = Frame
    DistanceLabel.Size = UDim2.new(1, 0, 0.15, 0)
    DistanceLabel.Position = UDim2.new(0, 0, 0.85, 0)
    DistanceLabel.BackgroundTransparency = 1
    DistanceLabel.TextColor3 = Color3.fromRGB(255, 105, 180)
    DistanceLabel.Font = Enum.Font.Code
    DistanceLabel.TextSize = 12
    DistanceLabel.Text = "[Dist: Calculating...]"

    Instances.NameTags[player] = BillboardGui

    player.CharacterAdded:Connect(function(newCharacter)
        if Settings.Visuals.NameTags then
            Instances.NameTags[player]:Destroy()
            Instances.NameTags[player] = nil
            wait(1)
            createNameTag(player)
        end
    end)
end

local function updateNameTags()
    for player, gui in pairs(Instances.NameTags) do
        local success = pcall(function()
            if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 and player.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                gui.Frame.DistanceLabel.Text = "[Dist: " .. math.floor(distance) .. "]"
            else
                gui:Destroy()
                Instances.NameTags[player] = nil
            end
        end)
        if not success then
            gui:Destroy()
            Instances.NameTags[player] = nil
        end
    end
end

local function ToggleNameTags()
    Settings.Visuals.NameTags = not Settings.Visuals.NameTags
    if Settings.Visuals.NameTags then
        for _, player in ipairs(Players:GetPlayers()) do
            createNameTag(player)
        end
        Players.PlayerAdded:Connect(createNameTag)
        RunService.RenderStepped:Connect(updateNameTags)
    else
        for _, gui in pairs(Instances.NameTags) do
            gui:Destroy()
        end
        Instances.NameTags = {}
    end
    NameTagsButton.Text = Settings.Visuals.NameTags and "NameTags ON" or "NameTags OFF"
    UpdateBindList()
end

-- Trails (Topka Visuals Style)
local function createTrail(player)
    if player == LocalPlayer or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    local trail = Instance.new("Trail")
    trail.Parent = player.Character.HumanoidRootPart
    trail.Attachment0 = Instance.new("Attachment", player.Character.HumanoidRootPart)
    trail.Attachment1 = Instance.new("Attachment", player.Character.HumanoidRootPart)
    trail.Attachment1.Position = Vector3.new(0, -1, 0)
    trail.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 191, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 105, 180))
    }
    trail.Lifetime = 1
    trail.Transparency = NumberSequence.new(0, 1)
    trail.WidthScale = NumberSequence.new(0.5, 0)
    trail.Enabled = true

    Instances.Trails[player] = trail

    player.CharacterAdded:Connect(function(newCharacter)
        if Settings.Visuals.TrailsEnabled then
            Instances.Trails[player]:Destroy()
            Instances.Trails[player] = nil
            wait(1)
            createTrail(player)
        end
    end)
end

local function ToggleTrails()
    Settings.Visuals.TrailsEnabled = not Settings.Visuals.TrailsEnabled
    if Settings.Visuals.TrailsEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            createTrail(player)
        end
        Players.PlayerAdded:Connect(createTrail)
    else
        for _, trail in pairs(Instances.Trails) do
            trail:Destroy()
        end
        Instances.Trails = {}
    end
    TrailsButton.Text = Settings.Visuals.TrailsEnabled and "Trails ON" or "Trails OFF"
    UpdateBindList()
end

-- Bullet Tracers (Topka Visuals Style)
local function createBulletTracer(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    local lastFireTime = 0
    local connection

    connection = RunService.RenderStepped:Connect(function()
        if not Settings.Visuals.BulletTracersEnabled or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            connection:Disconnect()
            return
        end

        local currentTime = tick()
        if currentTime - lastFireTime < 0.1 then return end

        local gun = player.Character:FindFirstChildWhichIsA("Tool")
        if gun and gun:FindFirstChild("Fire") then
            local fireSound = gun:FindFirstChild("Fire", true)
            if fireSound and fireSound:IsA("Sound") and fireSound.Playing then
                lastFireTime = currentTime

                local startPos = gun:FindFirstChild("Handle") and gun.Handle.Position or player.Character.HumanoidRootPart.Position
                local ray = Ray.new(startPos, (Camera.CFrame.LookVector * 1000))
                local hit, endPos = workspace:FindPartOnRayWithIgnoreList(ray, {player.Character, Camera})

                local beam = Instance.new("Beam")
                beam.Parent = workspace
                beam.Attachment0 = Instance.new("Attachment", workspace.Terrain)
                beam.Attachment1 = Instance.new("Attachment", workspace.Terrain)
                beam.Attachment0.Position = startPos
                beam.Attachment1.Position = endPos or (startPos + (Camera.CFrame.LookVector * 1000))
                beam.Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 0)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
                }
                beam.Transparency = NumberSequence.new(0, 1)
                beam.Width0 = 0.2
                beam.Width1 = 0
                beam.LightEmission = 1
                beam.LightInfluence = 0
                beam.Lifetime = 0.5

                table.insert(Instances.BulletTracers, beam)
                spawn(function()
                    wait(0.5)
                    beam:Destroy()
                end)
            end
        end
    end)

    player.CharacterAdded:Connect(function(newCharacter)
        if Settings.Visuals.BulletTracersEnabled then
            connection:Disconnect()
            wait(1)
            createBulletTracer(player)
        end
    end)
end

local function ToggleBulletTracers()
    Settings.Visuals.BulletTracersEnabled = not Settings.Visuals.BulletTracersEnabled
    if Settings.Visuals.BulletTracersEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            createBulletTracer(player)
        end
        Players.PlayerAdded:Connect(createBulletTracer)
    else
        for _, beam in pairs(Instances.BulletTracers) do
            beam:Destroy()
        end
        Instances.BulletTracers = {}
    end
    BulletTracersButton.Text = Settings.Visuals.BulletTracersEnabled and "Bullet Tracers ON" or "Bullet Tracers OFF"
    UpdateBindList()
end

-- Glow (Topka Visuals Style)
local function createGlow(player)
    if player == LocalPlayer or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    local highlight = Instance.new("Highlight")
    highlight.Parent = player.Character
    highlight.Adornee = player.Character
    highlight.FillColor = Color3.fromRGB(255, 105, 180)
    highlight.OutlineColor = Color3.fromRGB(0, 191, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0

    Instances.Glows[player] = highlight

    player.CharacterAdded:Connect(function(newCharacter)
        if Settings.Visuals.GlowEnabled then
            Instances.Glows[player]:Destroy()
            Instances.Glows[player] = nil
            wait(1)
            createGlow(player)
        end
    end)
end

local function ToggleGlow()
    Settings.Visuals.GlowEnabled = not Settings.Visuals.GlowEnabled
    if Settings.Visuals.GlowEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            createGlow(player)
        end
        Players.PlayerAdded:Connect(createGlow)
    else
        for _, glow in pairs(Instances.Glows) do
            glow:Destroy()
        end
        Instances.Glows = {}
    end
    GlowButton.Text = Settings.Visuals.GlowEnabled and "Glow ON" or "Glow OFF"
    UpdateBindList()
end

-- Rage Features
-- SpinBot (Skid Style with Sync)
RunService.RenderStepped:Connect(function()
    if Settings.Rage.SpinBotEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = LocalPlayer.Character.HumanoidRootPart
        spinAngle = spinAngle + math.rad(Settings.Rage.SpinSpeed)
        rootPart.CFrame = CFrame.new(rootPart.Position) * CFrame.Angles(0, spinAngle, 0)
        Camera.CFrame = CFrame.new(Camera.CFrame.Position) * CFrame.Angles(0, spinAngle, 0)
    end
end)

local function ToggleSpinBot()
    Settings.Rage.SpinBotEnabled = not Settings.Rage.SpinBotEnabled
    SpinBotButton.Text = Settings.Rage.SpinBotEnabled and "SpinBot ON" or "SpinBot OFF"
    SpinSpeedSlider.Visible = Settings.Rage.SpinBotEnabled
    UpdateBindList()
end

SpinSpeedSlider.FocusLost:Connect(function()
    local speed = tonumber(SpinSpeedSlider.Text:match("%d+"))
    if speed then
        Settings.Rage.SpinSpeed = math.clamp(speed, 10, 200)
        SpinSpeedSlider.Text = "Speed: " .. Settings.Rage.SpinSpeed
    else
        SpinSpeedSlider.Text = "Speed: " .. Settings.Rage.SpinSpeed
    end
end)

-- WallShot (NeverLose Style Fixed)
RunService.RenderStepped:Connect(function()
    if Settings.Rage.WallShotEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local target = getClosestPlayerToMouse(true)
        if target and target.Character and target.Character:FindFirstChild("Head") then
            local gun = LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
            if gun and gun:FindFirstChild("Fire") then
                local headPos = target.Character.Head.Position
                local ray = Ray.new(Camera.CFrame.Position, (headPos - Camera.CFrame.Position).Unit * 1000)
                local ignoreList = {LocalPlayer.Character, Camera}
                local hit, pos = workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
                if hit then
                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, pos)
                else
                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, headPos)
                end
                if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
                    gun:FindFirstChild("Fire").RemoteEvent:FireServer(headPos)
                end
            end
        end
    end
end)

local function ToggleWallShot()
    Settings.Rage.WallShotEnabled = not Settings.Rage.WallShotEnabled
    WallShotButton.Text = Settings.Rage.WallShotEnabled and "WallShot ON" or "WallShot OFF"
    UpdateBindList()
end

-- BunnyHop (Skid Style Fixed)
RunService.RenderStepped:Connect(function()
    if Settings.Rage.BunnyHopEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        local humanoid = LocalPlayer.Character.Humanoid
        local rootPart = LocalPlayer.Character.HumanoidRootPart
        local moveDirection = humanoid.MoveDirection
        if moveDirection.Magnitude > 0 and humanoid:GetState() == Enum.HumanoidStateType.Running then
            humanoid.Jump = true
        end
    end
end)

local function ToggleBunnyHop()
    Settings.Rage.BunnyHopEnabled = not Settings.Rage.BunnyHopEnabled
    BunnyHopButton.Text = Settings.Rage.BunnyHopEnabled and "BunnyHop ON" or "BunnyHop OFF"
    UpdateBindList()
end

-- Funny Function
local function ToggleFunny()
    Settings.Funny.Enabled = not Settings.Funny.Enabled
    FunnyButton.Text = Settings.Funny.Enabled and "Funny ON" or "Funny OFF"
    FunnySubMenu.Visible = Settings.Funny.Enabled
    if Settings.Funny.Enabled then
        local funnySound = Instance.new("Sound")
        funnySound.Parent = SoundService
        funnySound.SoundId = Settings.Funny.SoundId
        funnySound.Volume = 1
        funnySound:Play()
        funnySound.Ended:Connect(function()
            funnySound:Destroy()
            Settings.Funny.Enabled = false
            FunnyButton.Text = "Funny OFF"
            UpdateBindList()
        end)
    end
    UpdateBindList()
end

-- Death Sound Replacement with Femboy Moans
local function setupDeathSound(player)
    if Instances.DeathSounds[player] then
        Instances.DeathSounds[player]:Destroy()
    end
    local character = player.Character
    if not character then return end
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid then return end

    local deathSound = Instance.new("Sound")
    deathSound.Parent = humanoid
    deathSound.SoundId = "rbxassetid://1837829147" -- Femboy moan sound
    deathSound.Volume = 1
    deathSound.Name = "DeathMoan"

    humanoid.HealthChanged:Connect(function(health)
        if health <= 0 and not deathSound.IsPlaying then
            deathSound:Play()
            wait(2)
            deathSound:Destroy()
            Instances.DeathSounds[player] = nil
        end
    end)

    Instances.DeathSounds[player] = deathSound

    player.CharacterAdded:Connect(function(newCharacter)
        setupDeathSound(player)
    end)
end

for _, player in ipairs(Players:GetPlayers()) do
    setupDeathSound(player)
end
Players.PlayerAdded:Connect(setupDeathSound)

-- Update Bind List
local function UpdateBindList()
    BindList.Text = string.format("Binds:\nToggle Menu: RShift/Home\nAimBot: %s\nESP: %s\nNameTags: %s\nTrails: %s\nBullet Tracers: %s\nGlow: %s\nSpinBot: %s\nWallShot: %s\nBunnyHop: %s\nFunny: %s",
        Settings.AimBot.Key.Name,
        Settings.Visuals.ESPEnabled and "Enabled" or "None",
        Settings.Visuals.NameTags and "Enabled" or "None",
        Settings.Visuals.TrailsEnabled and "Enabled" or "None",
        Settings.Visuals.BulletTracersEnabled and "Enabled" or "None",
        Settings.Visuals.GlowEnabled and "Enabled" or "None",
        Settings.Rage.SpinBotEnabled and "Enabled" or "None",
        Settings.Rage.WallShotEnabled and "Enabled" or "None",
        Settings.Rage.BunnyHopEnabled and "Enabled" or "None",
        Settings.Funny.Enabled and "Enabled" or "None")
end

-- Animation Effects
local function AddAnimationEffect(button)
    button.MouseEnter:Connect(function()
        local tween = game:GetService("TweenService"):Create(button, TweenInfo.new(0.2), {Size = UDim2.new(0, 120, 0, 35)})
        tween:Play()
    end)
    button.MouseLeave:Connect(function()
        local tween = game:GetService("TweenService"):Create(button, TweenInfo.new(0.2), {Size = UDim2.new(0, 110, 0, 30)})
        tween:Play()
    end)
end

AddAnimationEffect(AimButton)
AddAnimationEffect(ESPButton)
AddAnimationEffect(NameTagsButton)
AddAnimationEffect(TrailsButton)
AddAnimationEffect(BulletTracersButton)
AddAnimationEffect(GlowButton)
AddAnimationEffect(SpinBotButton)
AddAnimationEffect(WallShotButton)
AddAnimationEffect(BunnyHopButton)
AddAnimationEffect(FunnyButton)

-- GUI Interactions
CombatTab.MouseButton1Click:Connect(function()
    CombatPanel.Visible = true
    VisualsPanel.Visible = false
    RagePanel.Visible = false
    CombatTab.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    VisualsTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    RageTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
end)

VisualsTab.MouseButton1Click:Connect(function()
    CombatPanel.Visible = false
    VisualsPanel.Visible = true
    RagePanel.Visible = false
    CombatTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    VisualsTab.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    RageTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
end)

RageTab.MouseButton1Click:Connect(function()
    CombatPanel.Visible = false
    VisualsPanel.Visible = false
    RagePanel.Visible = true
    CombatTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    VisualsTab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    RageTab.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
end)

AimButton.MouseButton1Click:Connect(function()
    Settings.AimBot.Enabled = not Settings.AimBot.Enabled
    AimButton.Text = Settings.AimBot.Enabled and "AimBot ON" or "AimBot OFF"
    AimSubMenu.Visible = Settings.AimBot.Enabled
    UpdateBindList()
end)

FOVSlider.FocusLost:Connect(function()
    local fov = tonumber(FOVSlider.Text:match("%d+"))
    if fov then
        Settings.AimBot.FOV = math.clamp(fov, 10, 200)
        FOVSlider.Text = "FOV: " .. Settings.AimBot.FOV
    else
        FOVSlider.Text = "FOV: " .. Settings.AimBot.FOV
    end
end)

local isBinding = false
AimBindButton.MouseButton1Click:Connect(function()
    if isBinding then return end
    isBinding = true
    AimBindButton.Text = "Press a key..."
    local connection
    connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.Keyboard then
            Settings.AimBot.Key = input.KeyCode
            AimBindButton.Text = "Bind: " .. input.KeyCode.Name
            UpdateBindList()
            isBinding = false
            connection:Disconnect()
        end
    end)
end)

local funnyIsBinding = false
FunnyBindButton.MouseButton1Click:Connect(function()
    if funnyIsBinding then return end
    funnyIsBinding = true
    FunnyBindButton.Text = "Press a key..."
    local connection
    connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.Keyboard then
            Settings.Funny.Key = input.KeyCode
            FunnyBindButton.Text = "Bind: " .. input.KeyCode.Name
            UpdateBindList()
            funnyIsBinding = false
            connection:Disconnect()
        end
    end)
end)

ESPButton.MouseButton1Click:Connect(ToggleESP)
NameTagsButton.MouseButton1Click:Connect(ToggleNameTags)
TrailsButton.MouseButton1Click:Connect(ToggleTrails)
BulletTracersButton.MouseButton1Click:Connect(ToggleBulletTracers)
GlowButton.MouseButton1Click:Connect(ToggleGlow)
SpinBotButton.MouseButton1Click:Connect(ToggleSpinBot)
WallShotButton.MouseButton1Click:Connect(ToggleWallShot)
BunnyHopButton.MouseButton1Click:Connect(ToggleBunnyHop)
FunnyButton.MouseButton1Click:Connect(ToggleFunny)

-- Right Mouse Hold for AimBot
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isRightMouseDown = true
    elseif table.find(Settings.Binds.ToggleMenu, input.KeyCode) then
        ScreenGui.Enabled = not ScreenGui.Enabled
        BindsFrame.Visible = ScreenGui.Enabled
    elseif input.KeyCode == Settings.AimBot.Key then
        Settings.AimBot.Enabled = not Settings.AimBot.Enabled
        AimButton.Text = Settings.AimBot.Enabled and "AimBot ON" or "AimBot OFF"
        AimSubMenu.Visible = Settings.AimBot.Enabled
        UpdateBindList()
    elseif input.KeyCode == Settings.Funny.Key then
        ToggleFunny()
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isRightMouseDown = false
    end
end)

UpdateBindList()
